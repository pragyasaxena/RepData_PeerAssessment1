setwd("~/datasciencecoursera/ReproducibleResearch/RepData_PeerAssessment1")
activity<-read.csv("activity.csv")
missing<-!complete.cases(activity) #row indexes of missing values
numofna<-sum(missing)              #number of missing values
intervalmeans<-aggregate(steps~interval,data=activity,FUN = mean) #mean value over days for each interval
View(intervalmeans)
match(activity$interval[missing],intervalmeans$interval)
intervalmeans$steps[match(activity$interval[missing],intervalmeans$interval)]
newactivity<-activity
View(newactivity)
newactivity$steps[missing]<-intervalmeans$steps[match(activity$interval[missing],intervalmeans$interval)] #row index for matching interval where missing values are present
View(newactivity)
View(activity)
newstepsperday<-aggregate(steps~date,data=newactivity,FUN = sum)
hist(newstepsperday$steps,xlab="Steps per day",main = "Histogram of total steps taken per day")
newmeanstepsperday<-round(mean(newstepsperday$steps),2)
newmedianstepsperday<-median(newstepsperday$steps)
meanstepsperday<-round(mean(stepsperday$steps),2)
stepsperday<-aggregate(steps~date,data=activity,FUN = sum)
meanstepsperday<-round(mean(stepsperday$steps),2)
medianstepsperday<-median(stepsperday$steps)
intervalmeans<-aggregate(steps~interval,data=activity,FUN = median) #mean value over days for each interval
newactivity<-activity
newactivity$steps[missing]<-intervalmeans$steps[match(activity$interval[missing],intervalmeans$interval)] #replace the missing values by mean for that interval
newstepsperday<-aggregate(steps~date,data=newactivity,FUN = sum)
hist(newstepsperday$steps,xlab="Steps per day",main = "Histogram of total steps taken per day")
newmeanstepsperday<-round(mean(newstepsperday$steps),2)
newmedianstepsperday<-median(newstepsperday$steps)
intervalmeans<-aggregate(steps~interval,data=activity,FUN = mean) #mean value over days for each interval
newactivity<-activity
newactivity$steps[missing]<-intervalmeans$steps[match(activity$interval[missing],intervalmeans$interval)] #replace the missing values by mean for that interval
newstepsperday<-aggregate(steps~date,data=newactivity,FUN = sum)
hist(newstepsperday$steps,xlab="Steps per day",main = "Histogram of total steps taken per day")
newmeanstepsperday<-round(mean(newstepsperday$steps),2)
newmedianstepsperday<-median(newstepsperday$steps)
newmedianstepsperday<-round(median(newstepsperday$steps),2)
intervalmeans<-aggregate(steps~interval,data=activity,FUN = median) #mean value over days for each interval
newactivity<-activity
newactivity$steps[missing]<-intervalmeans$steps[match(activity$interval[missing],intervalmeans$interval)] #replace the missing values by mean for that interval
newstepsperday<-aggregate(steps~date,data=newactivity,FUN = sum)
hist(newstepsperday$steps,xlab="Steps per day",main = "Histogram of total steps taken per day")
newmeanstepsperday<-round(mean(newstepsperday$steps),2)
newmedianstepsperday<-round(median(newstepsperday$steps),2)
?weekdays
weekdays(newactivity$date[1:3])
class(activity$steps)
class(activity$date)
class(activity$interval)
View(newactivity)
intervalmeans<-aggregate(steps~interval,data=activity,FUN = mean) #mean value over days for each interval
newactivity<-activity
newactivity$steps[missing]<-intervalmeans$steps[match(activity$interval[missing],intervalmeans$interval)] #replace the missing values by mean for that interval
View(newactivity)
weekdays(as.Date(newactivity$date[1:3]))
newactivity$Day<-weekdays(as.Date(newactivity$date))
View(newactivity)
newactivity$Day<-weekdays(as.Date(newactivity$date)) %in% c("Saturday","Sunday")
View(newactivity)
?as.factor
class(newactivity$Day)
newactivity$Day<-as.factor(weekdays(as.Date(newactivity$date)) %in% c("Saturday","Sunday"),labels = c("Weekday","Weekend")
)
newactivity$Day<-as.factor(weekdays(as.Date(newactivity$date)) %in% c("Saturday","Sunday"),levels = c("Weekday","Weekend"))
newactivity$Day<-weekdays(as.Date(newactivity$date)) %in% c("Saturday","Sunday")
newactivity$Day<-if (weekdays(as.Date(newactivity$date)) %in% c("Saturday","Sunday")) {"Weekend"} else {"Weekday"}
View(newactivity)
class(newactivity$Day)
newactivity$Day<-weekdays(as.Date(newactivity$date)) %in% c("Saturday","Sunday")
newactivity$Day["FALSE"]
newactivity$Day[FALSE]
newactivity$Day<-as.factor(weekdays(as.Date(newactivity$date)) %in% c("Saturday","Sunday"))
class(newactivity$Day)
newactivity$Day
levels(newactivity$Day)[levels(newactivity$Day)=="FALSE"]<-"Weekday"
levels(newactivity$Day)[levels(newactivity$Day)=="TRUE"]<-"Weekend"
View(newactivity)
g<-ggplot(newactivity,aes(interval,steps))+geom_line()+facet_grid(Day~.)
library("ggplot2", lib.loc="~/R/win-library/3.1")
g<-ggplot(newactivity,aes(interval,steps))+geom_line()+facet_grid(Day~.)
print(g)
newstepsperday<-aggregate(steps~date+Day+interval,data=activity,FUN = sum)
newstepsperday<-aggregate(steps~date+Day+interval,data=newactivity,FUN = sum)
View(newstepsperday)
stepsperinterval<-aggregate(steps~Day+interval,data=newactivity,FUN = sum)
View(stepsperinterval)
newstepsperinterval<-aggregate(steps~Day+interval,data=newactivity,FUN = sum)
g<-ggplot(newstepsperinterval,aes(interval,steps))+geom_line()+facet_grid(Day~.)
print(g)
rm(newstepsperday,newmeanstepsperday,newmedianstepsperday)
rm(list=ls())
activity<-read.csv("activity.csv")
missing<-!complete.cases(activity) #row indexes of missing values
intervalmeans<-aggregate(steps~interval,data=activity,FUN = mean) #mean value over days for each interval
newactivity<-activity
newactivity$steps[missing]<-intervalmeans$steps[match(activity$interval[missing],intervalmeans$interval)] #replace the missing values by mean for that interval
newactivity$Day<-as.factor(weekdays(as.Date(newactivity$date)) %in% c("Saturday","Sunday"))
levels(newactivity$Day)[levels(newactivity$Day)=="FALSE"]<-"Weekday"
levels(newactivity$Day)[levels(newactivity$Day)=="TRUE"]<-"Weekend"
test<-which(newactivity$Day=="Weekend" & newactivity$interval==0)
sum(newactivity$steps[test])
rm(test)
?ggplot
g<-ggplot(newstepsperinterval,aes(interval,steps))+geom_line(col="blue")+facet_grid(Day~.)
newactivity$Day<-as.factor(weekdays(as.Date(newactivity$date)) %in% c("Saturday","Sunday"))
levels(newactivity$Day)[levels(newactivity$Day)=="FALSE"]<-"Weekday"
levels(newactivity$Day)[levels(newactivity$Day)=="TRUE"]<-"Weekend"
newstepsperinterval<-aggregate(steps~Day+interval,data=newactivity,FUN = sum)
g<-ggplot(newstepsperinterval,aes(interval,steps))+geom_line(col="blue")+facet_grid(Day~.)
print(g)
g<-ggplot(newstepsperinterval,aes(interval,steps))+geom_line(col="blue")+facet_grid(Day~.)+theme(panel.background=element_rect(fill="white"))
print(g)
g<-ggplot(newstepsperinterval,aes(interval,steps))+geom_line(col="blue")+facet_grid(Day~.)+theme(panel.background=element_rect(fill="grey"))
print(g)
g<-ggplot(newstepsperinterval,aes(interval,steps))+geom_line(col="blue")+facet_grid(Day~.)+theme(panel.background=element_rect(fill="grey20"))
print(g)
g<-ggplot(newstepsperinterval,aes(interval,steps))+geom_line(col="blue")+facet_grid(Day~.)+theme(panel.background=element_rect(fill="white50"))
print(g)
g<-ggplot(newstepsperinterval,aes(interval,steps))+geom_line(col="blue")+facet_grid(Day~.)
print(g)
g<-ggplot(newstepsperinterval,aes(interval,steps))+geom_line(col="blue")+facet_grid(.~Day)
print(g)
g<-ggplot(newstepsperinterval,aes(interval,steps))+geom_line(col="blue")+facet_grid(Day~.)
print(g)
stepsperday<-aggregate(steps~date,data=activity,FUN = sum)
meanstepsperday<-round(mean(stepsperday$steps))
medianstepsperday<-round(median(stepsperday$steps),2)
